{
  "name": "flowzilla",
  "version": "1.0.2",
  "sideEffects": false,
  "license": "MIT",
  "main": "./lib/index.cjs.js",
  "browser": "./lib/index.umd.js",
  "esnext": "./lib/index.js",
  "module": "./lib/index.js",
  "types": "./lib/index.d.js",
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "up": "yarn upgrade-interactive --latest",
    "docs": "docsify serve docs",
    "build": "run-s build:*",
    "dev": "run-p \"build:* -- --watch\"",
    "build:typedoc": "rimraf docs/typedoc && typedoc --options ./typedoc.js ./src",
    "build:ts": "tsc",
    "build:rollup": "rollup -c",
    "clean": "rimraf ./lib && rimraf ./node_modules/.cache",
    "p": "yarn test && yarn build && npm publish --registry https://registry.npmjs.org",
    "test": "jest --verbose=false",
    "coverage": "codecov"
  },
  "keywords": [
    "express",
    "redux",
    "flow",
    "stream",
    "async",
    "transform",
    "mutate",
    "mutation",
    "flux"
  ],
  "author": "Benjamin Kniffler <bkniffler@me.com>",
  "bugs": {
    "url": "https://github.com/bkniffler/flowzilla"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bkniffler/flowzilla.git"
  },
  "dependencies": {
    "tslib": "^1.9.3"
  },
  "devDependencies": {
    "@types/benchmark": "^1.0.31",
    "@types/fs-extra": "^5.0.5",
    "@types/jest": "^24.0.11",
    "@types/node": "^11.12.2",
    "@types/react": "^16.8.10",
    "@types/react-test-renderer": "^16.0.3",
    "benchmark": "^2.1.4",
    "codecov": "^3.1.0",
    "docsify-cli": "^4.3.0",
    "faltu": "^0.1.0",
    "jest": "24.5.0",
    "npm-run-all": "^4.1.3",
    "rimraf": "^2.6.3",
    "rollup": "^1.7.4",
    "rollup-plugin-auto-external": "^2.0.0",
    "rollup-plugin-commonjs": "^9.2.2",
    "rollup-plugin-node-resolve": "^4.0.1",
    "ts-jest": "^24.0.0",
    "typedoc": "^0.14.2",
    "typescript": "^3.4.1"
  },
  "resolutions": {
    "typescript": "^3.4.1",
    "@types/react": "^16.8.10"
  },
  "jest": {
    "modulePathIgnorePatterns": [
      ".ou",
      "_old",
      ".cache"
    ],
    "globals": {
      "ts-jest": {
        "tsConfig": "./tsconfig.base.json"
      }
    },
    "preset": "ts-jest",
    "collectCoverage": false,
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageReporters": [
      "html",
      "cobertura",
      "text"
    ]
  }
}
