{
  "name": "service-dog",
  "version": "1.0.0",
  "sideEffects": false,
  "license": "MIT",
  "main": "lib",
  "esnext": "es",
  "module": "es",
  "types": "lib/index.d.js",
  "publishConfig": {
    "access": "public"
  },
  "scripts": {
    "up": "yarn upgrade-interactive --latest",
    "docs": "docsify serve docs",
    "typedoc": "run-s typedoc:*",
    "typedoc:clean": "rimraf docs",
    "typedoc:lerna": "typedoc --options ./typedoc.js ./src",
    "build": "run-p ts:*",
    "dev": "run-p \"ts:* -- --watch\"",
    "ts:es": "tsc --build ./tsconfig.es.json",
    "ts:lib": "tsc --build ./tsconfig.lib.json",
    "clean": "rimraf ./lib ./es",
    "p": "yarn build && yarn test && npm publish --registry https://registry.npmjs.org",
    "test": "yarn ts:lib && jest --verbose=false",
    "coverage": "codecov"
  },
  "keywords": [
    "rpc",
    "service",
    "proxy",
    "websocket",
    "socket",
    "electron",
    "ipc",
    "realtime",
    "react-native",
    "react"
  ],
  "author": "Benjamin Kniffler <bkniffler@me.com>",
  "bugs": {
    "url": "https://github.com/bkniffler/service-dog"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bkniffler/service-dog.git"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/benchmark": "^1.0.31",
    "@types/fs-extra": "^5.0.5",
    "@types/jest": "^24.0.11",
    "@types/lodash": "^4.14.123",
    "@types/node": "^11.11.6",
    "@types/react": "^16.7.6",
    "@types/react-test-renderer": "^16.0.3",
    "benchmark": "^2.1.4",
    "codecov": "^3.1.0",
    "docsify-cli": "^4.3.0",
    "faltu": "^0.1.0",
    "jest": "24.5.0",
    "lodash": "^4.17.11",
    "npm-run-all": "^4.1.3",
    "rimraf": "^2.6.3",
    "ts-jest": "^24.0.0",
    "typedoc": "^0.14.2",
    "typescript": "^3.3.4000"
  },
  "jest": {
    "modulePathIgnorePatterns": [
      ".ou",
      "_old",
      ".cache"
    ],
    "globals": {
      "ts-jest": {
        "tsConfig": "./tsconfig.base.json"
      }
    },
    "preset": "ts-jest",
    "collectCoverage": false,
    "collectCoverageFrom": [
      "src/**/*.ts"
    ],
    "coverageReporters": [
      "html",
      "cobertura",
      "text"
    ]
  }
}
